# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
# orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  # python: circleci/python@1.2

# workflow 에서 사용할 빌드 작업을 정의한 jobs 작성
jobs:
  # job의 이름, 자유롭게 설정 가능
  build-and-test: 
    # 빌드를 실행할 도커 이미지 설정
    docker:
      # docker와 git 을 지원하는 도커 이미지
      - image: cimg/base:2021.04
    # job 에 대해 실행할 내용을 작성
    steps:
      # The first step, checkout, is a special step to check out the source code; this will be downloaded to the directory specified by working_directory.
      - checkout
      # This step helps you avoid the Docker-in-Docker problem. In fact, we’re setting up an environment that is isolated from the CI (or primary) container, then using the remote host’s Docker Engine.
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: sudo apt-get install make
      - run:
          name: check dir
          command: ls
      - run:
          name: change dir
          command: cd study
      - run:
          name: Run docker image
          command: make build

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  # workflow 의 이름, 자유롭게 설정 가능
  build:
    # workflow 안에 실행할 job 설정
    jobs:
      - build-and-test
